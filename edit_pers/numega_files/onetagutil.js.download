/**
 * This js file has been created in order to push chat events to OneTag server
 */

var eGainOneTagUtil = {
    regexForImg: /<\s*img[^>]+>/,
    documentUrl: document.URL,
    chatStartedPrefix: "",
    chatStartedSuffix: "",
    chatEndedPrefix: "",
    chatEndedSuffix: "",
    systemTimeOutMessage: "",
    lastAgentRequestMessageTime: -1,
    lastCustomerRequestMessageTime: -1,
    requiredUrlParams: ["entryPointId", "templateName", "ver", "locale", "eglvrefname", "eglvcaseid", "offercorrelationid", "interactionid", "eglvPriorityChat", "referer", "aid", "sid", "uid", "clientKey"],
    removeURLParameter: function (url, parameter) {
        //prefer to use l.search if you have a location/link object
        var urlparts = url.split('?');
        if (urlparts.length >= 2) {
            var prefix = encodeURIComponent(parameter) + '=';
            var pars = urlparts[1].split(/[&;]/g);
            //reverse iteration as may be destructive
            for (var i = pars.length; i-- > 0; ) {
                //idiom for string.startsWith
                if (pars[i].lastIndexOf(prefix, 0) !== -1) {
                    pars.splice(i, 1);
                }
            }
            url = urlparts[0] + (pars.length > 0 ? '?' + pars.join('&') : "");
            return url;
        } else {
            return url;
        }
    },
    /*
     * EGS-39529 : Removing url parameters that are not required to be sent to Onetag and only used for maintaining chat session 
     * 
     */
    cleanIFrameUrl: function () {
        var url = document.URL;
        var urlString = window.location.search.substring(1);
        var urlParams = urlString.split("&");
        for (var i = 0; i < urlParams.length; i++) {
            var param = urlParams[i].split("=");
            var key = param[0];
            var value = param[1];
            if (eGainOneTagUtil.requiredUrlParams.indexOf(key) == -1) {
                url = eGainOneTagUtil.removeURLParameter(url, key);
            }
        }
        eGainOneTagUtil.documentUrl = url;
    },
    loadOneTag: function (chatInitializationData) {
        var EG_ACT_ID = chatInitializationData.oneTagAId;
        (function (e, f) {
            var d, c, b, a = e.createElement("iframe");
            a.src = "about:blank";
            a.title = "";
            a.id = "egot_iframe";
            (a.frameElement || a).style.cssText = "width:0;height:0;border:0";
            b = e.getElementsByTagName("script");
            b = b[b.length - 1];
            b.parentNode.insertBefore(a, b);
            try {
                c = a.contentWindow.document;
            } catch (g) {
                d = e.domain, a.src = "javascript:var d=document.open();d.domain='" + d + "';void(0);", c = a.contentWindow.document;
            }
            c.open()._d = function () {
                var a = this.createElement("script");
                d && (this.domain = d);
                a.src = f;
                this.isEGFIF = !0;
                this.body.appendChild(a);
            };
            c.write('<body onload="document._d();">');
            c.close();
        })(document, "//" + chatInitializationData.oneTagServerDomainName + "/onetag/" + EG_ACT_ID);
    },
    pushChatEvent: function (eventType, eventInfo) {
        var EG_CALL_Q = window.EG_CALL_Q || [];
        EG_CALL_Q.push(["send",
            "cht",
            eventType,
            eGainOneTagUtil.documentUrl,
            101,
            eventInfo
        ]);
    },
    pushChatAgentMsg: function (messageHtml) {

        var curTime = Date.now();
        if (eGainOneTagUtil.lastAgentRequestMessageTime == -1) {
            eGainOneTagUtil.lastAgentRequestMessageTime = curTime;
        }
        var agentSideTimeElapsed = curTime - eGainOneTagUtil.lastCustomerRequestMessageTime;
        eGainOneTagUtil.lastAgentRequestMessageTime = curTime;

        /* EGS-43655: Removing personal data from onetag information */
        //var messageToBePushed = eGainOneTagUtil.parseSmileysInMessage(messageHtml);
        eGainOneTagUtil.pushChatEvent("uac", {
            "EventName": "ChatAgentMsg",
            "Time-to-respond": agentSideTimeElapsed,
        });
    },
    pushChatCustomerMsg: function (messageHtml) {
        var curTime = Date.now();
        if (eGainOneTagUtil.lastCustomerRequestMessageTime == -1) {
            eGainOneTagUtil.lastCustomerRequestMessageTime = curTime;
        }
        var customerSideTimeElapsed = curTime - eGainOneTagUtil.lastAgentRequestMessageTime;
        eGainOneTagUtil.lastCustomerRequestMessageTime = curTime;

        /* EGS-43655: Removing personal data from onetag information */
        //var messageToBePushed = eGainOneTagUtil.parseSmileysInMessage(messageHtml);
        eGainOneTagUtil.pushChatEvent("uac", {
            "EventName": "ChatCustomerMsg",
            "Time-to-respond": customerSideTimeElapsed,
        });
    },
    parseSmileysInMessage: function (messageHtml) {
        var messageToBePushed = messageHtml;
        if ((eGainOneTagUtil.regexForImg).test(messageHtml)) {
            var el = document.createElement('el');
            el.innerHTML = messageHtml;
            var smileys = el.getElementsByTagName('img');
            if (smileys) {
                var noOfSmileys = smileys.length;
                for (var i = 0; i < noOfSmileys; i++) {
                    var abridgedImg = "&lt;img alt='"
                            + (smileys[0].getAttribute('alt') || '') + "'&gt;";
                    smileys[0].outerHTML = abridgedImg;
                }
                messageToBePushed = el.innerHTML;
            }
        }
        messageToBePushed = $.trim($("<div/>").html(messageToBePushed).text());
        return messageToBePushed;
    },
    pushChatSystemMsg: function (messageHtml) {
        if (messageHtml.search(eGainOneTagUtil.chatStartedPrefix) != -1 && messageHtml.search(eGainOneTagUtil.chatStartedSuffix) != -1) {
            var mode = (window.location.search.search("video=1") != -1) ? (window.location.search.search("avmode=4") != -1)?"Audio" : "Video" : "Text";
            eGainOneTagUtil.pushChatEvent("aev", {
                "EventName": "ChatEngaged",
                "ChatType": mode
            });
        }
        if (messageHtml.search(eGainOneTagUtil.chatAgentTransferPrefix) != -1 && messageHtml.search(eGainOneTagUtil.chatAgentTransferSuffix) != -1) {
            eGainOneTagUtil.pushChatEvent("ctx", {
                "EventName": "ChatTransfer",
                "TransferType": "Agent"
            });
            this.chatAwaitingAgentCaptured = false;
        }
        if (messageHtml.search(eGainOneTagUtil.chatQueueTransferPrefix) != -1 && messageHtml.search(eGainOneTagUtil.chatQueueTransferSuffix) != -1) {
            eGainOneTagUtil.pushChatEvent("ctx", {
                "EventName": "ChatTransfer",
                "TransferType": "Queue"
            });
            this.chatAwaitingAgentCaptured = false;
        }
        if (messageHtml.search(eGainOneTagUtil.chatDeptTransferPrefix) != -1 && messageHtml.search(eGainOneTagUtil.chatDeptTransferSuffix) != -1) {
            eGainOneTagUtil.pushChatEvent("ctx", {
                "EventName": "ChatTransfer",
                "TransferType": "Department"
            });
            this.chatAwaitingAgentCaptured = false;
        }
        if (messageHtml.search(eGainOneTagUtil.chatEndedPrefix) != -1 && messageHtml.search(eGainOneTagUtil.chatEndedSuffix) != -1) {
            eGainOneTagUtil.pushChatEvent("uac", {
                "EventName": "ChatExit",
                "Termination-Initiation": "Agent"
            });
        }
        if (messageHtml.search(eGainOneTagUtil.systemTimeOutMessage) != -1) {
            eGainOneTagUtil.pushChatEvent("aev", {
                "EventName": "ChatExit",
                "Termination-Initiation": "System"
            });
        }
    },
    chatAwaitingAgentCaptured: false,
    pushChatAwaitingMsg: function (waitTime) {
        if (this.chatAwaitingAgentCaptured === false){
            eGainOneTagUtil.pushChatEvent("aev", {
                "EventName": "ChatAwaitingAgent",
                "EstimatedWaitTime": waitTime
            });
            this.chatAwaitingAgentCaptured = true;
        }
        return this.chatAwaitingAgentCaptured;
    },
    pushChatEngagedMsg: function () {
        var mode = (window.location.search.search("video=1") != -1) ? "Video" : "Text";
        eGainOneTagUtil.pushChatEvent("aev", {
            "EventName": "ChatEngaged",
            "ChatType": mode
        });
    },
    parseMessages: function (messagingProperty) {
        if (messagingProperty) {
            var mesagingPropertyVariables = messagingProperty.split('\n');
            var foundStartChatString = false;
            var foundEndChatString = false;
            var foundTransferAgentString = false
            var foundTransferQueueString = false;
            var foundTransferDeptString = false;
            var foundsystemTimeOutMsg = false;
            for (i = 0; i < mesagingPropertyVariables.length; i++) {

                if (mesagingPropertyVariables[i].indexOf('agent_join_msg') === 0) {

                    var keyValuePair = mesagingPropertyVariables[i].split('=');
                    var chatStartedString = $.trim(keyValuePair[1]);
                    var temp = chatStartedString.split('{0}');
                    eGainOneTagUtil.chatStartedPrefix = temp[0];
                    eGainOneTagUtil.chatStartedSuffix = temp[1];
                    foundStartChatString = true;
                }

                else if (mesagingPropertyVariables[i].indexOf('agent_transfer_msg') === 0) {

                    var keyValuePair = mesagingPropertyVariables[i].split('=');
                    var chatTransferString = $.trim(keyValuePair[1]);
                    var temp = chatTransferString.split('{0}');
                    eGainOneTagUtil.chatAgentTransferPrefix = temp[0];
                    eGainOneTagUtil.chatAgentTransferSuffix = temp[1];
                    foundTransferAgentString = true;
                }

                else if (mesagingPropertyVariables[i].indexOf('queue_transfer_msg') === 0) {

                    var keyValuePair = mesagingPropertyVariables[i].split('=');
                    var chatTransferString = $.trim(keyValuePair[1]);
                    var temp = chatTransferString.split('{0}');
                    eGainOneTagUtil.chatQueueTransferPrefix = temp[0];
                    eGainOneTagUtil.chatQueueTransferSuffix = temp[1];
                    foundTransferQueueString = true;
                }

                else if (mesagingPropertyVariables[i].indexOf('deptt_transfer_msg') === 0) {

                    var keyValuePair = mesagingPropertyVariables[i].split('=');
                    var chatTransferString = $.trim(keyValuePair[1]);
                    var temp = chatTransferString.split('{0}');
                    eGainOneTagUtil.chatDeptTransferPrefix = temp[0];
                    eGainOneTagUtil.chatDeptTransferSuffix = temp[1];
                    foundTransferDeptString = true;
                }

                else if (mesagingPropertyVariables[i].indexOf('agent_close_session') === 0) {

                    var keyValuePair = mesagingPropertyVariables[i].split('=');
                    var chatEndedString = $.trim(keyValuePair[1]);
                    var temp = chatEndedString.split('{0}');
                    eGainOneTagUtil.chatEndedPrefix = temp[0];
                    eGainOneTagUtil.chatEndedSuffix = temp[1];
                    foundEndChatString = true;

                }
                else if (mesagingPropertyVariables[i].indexOf('system_close_session') === 0) {
                    var keyValuePair = mesagingPropertyVariables[i].split('=');
                    eGainOneTagUtil.systemTimeOutMessage = $.trim(keyValuePair[1]);
                    foundsystemTimeOutMsg = true;
                }
                else if (foundStartChatString === true && foundEndChatString === true && foundsystemTimeOutMsg === true
                        && foundTransferAgentString === true && foundTransferQueueString === true && foundTransferDeptString === true)
                    break;
            }
        }
    },
    disableTracker: function (eventType, eventInfo) {
        //to prevent OneTag Tracker default behaviour
        EG_CALL_Q = window.EG_CALL_Q || [];
        EG_CALL_Q.push(["disableTrackOnLoad"]);
    }
};